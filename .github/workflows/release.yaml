name: Create a release

env:
  BRANCH: release
  VERSION: 3.3.1

on:
  schedule:
    - cron: '30 10 * * 1'

jobs:
  build:
    name: Check build condition for Snap
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - '3.9'
          - '3.10'
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{matrix.python-version}}
          architecture: x64
      - id: code-checks
        name: Make sure the code follows conventions and tests correctly
        run: |
          make checks
      - id: build-package
        name: Build package
        run: |
          poetry build
      - name: Add version to environment vars
        run: |
          echo "PROJECT_VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
      - name: Check if tag version matches project version
        run: |
          TAG=$(git describe HEAD --tags --abbrev=0)
          echo $TAG
          echo $PROJECT_VERSION
          if [[ "$TAG" != "v$PROJECT_VERSION" ]]; then exit 1; fi
      - name: Release Notes
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: ".github/RELEASE-TEMPLATE.md"
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          files: |
            dist/spark_client-${{env.PROJECT_VERSION}}-py3-none-any.whl
            dist/spark_client-${{env.PROJECT_VERSION}}.tar.gz

  test:
    name: Test Release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download tar.gz file
        run: |
          mkdir pkgs
          # curl download the release and test ?
          rm -rf pkgs
